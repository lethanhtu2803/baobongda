{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from \"react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport { vi } from \"date-fns/locale\";\nimport { extractImageUrl } from \"./RSSImage\";\nconst CORS_PROXY = \"https://thingproxy.freeboard.io/fetch/\";\nexport const useRssFeed = type => {\n  _s();\n  const [rssItems, setRssItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchDataFromRssFeed = useCallback(async () => {\n    try {\n      const response = await fetch(`${CORS_PROXY}https://bongda24h.vn/RSS/${type}.rss`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const text = await response.text();\n      const parser = new DOMParser();\n      const xml = parser.parseFromString(text, \"text/xml\");\n      const items = Array.from(xml.querySelectorAll(\"item\"));\n      const parsedItems = items.map(item => {\n        var _item$getElementsByTa, _item$querySelector, _item$getElementsByTa2, _item$getElementsByTa3, _item$getElementsByTa4;\n        const titleCData = (_item$getElementsByTa = item.getElementsByTagName(\"title\")[0]) === null || _item$getElementsByTa === void 0 ? void 0 : _item$getElementsByTa.textContent;\n        const descriptionCData = (_item$querySelector = item.querySelector(\"description\")) === null || _item$querySelector === void 0 ? void 0 : _item$querySelector.textContent;\n        const timeSincePost = formatDistanceToNow(new Date((_item$getElementsByTa2 = item.getElementsByTagName(\"pubDate\")[0]) === null || _item$getElementsByTa2 === void 0 ? void 0 : _item$getElementsByTa2.textContent), {\n          addSuffix: true,\n          locale: vi\n        });\n        const url = extractImageUrl(descriptionCData);\n\n        // Lấy nội dung từ CDATA\n        const cdataTitle = titleCData.replace(/&quot;/g, '\"');\n        const cdataContent = descriptionCData.replace(/<[^>]+>/g, \"\");\n        const atomNamespace = \"http://www.w3.org/2005/Atom\";\n\n        // Trong hàm map items của bạn\n        const atomLink = item.getElementsByTagNameNS(atomNamespace, \"link\")[0];\n        const atomLinkHref = atomLink ? atomLink.getAttribute('href') : null;\n        return {\n          title: cdataTitle,\n          link: (_item$getElementsByTa3 = item.getElementsByTagName(\"link\")[0]) === null || _item$getElementsByTa3 === void 0 ? void 0 : _item$getElementsByTa3.textContent,\n          description: cdataContent,\n          pubDate: timeSincePost,\n          mediaContent: url,\n          category: (_item$getElementsByTa4 = item.getElementsByTagName(\"category\")[0]) === null || _item$getElementsByTa4 === void 0 ? void 0 : _item$getElementsByTa4.textContent,\n          atomLink: atomLinkHref\n        };\n      });\n      setRssItems(parsedItems);\n      setLoading(false);\n    } catch (error) {\n      setError(error);\n      setLoading(false);\n    }\n  }, [type]);\n  useEffect(() => {\n    fetchDataFromRssFeed();\n  }, [fetchDataFromRssFeed]);\n  return {\n    rssItems,\n    loading,\n    error\n  };\n};\n_s(useRssFeed, \"o2llIBqD5r35uWl8Y7G/0DXc6Ws=\");","map":{"version":3,"names":["useState","useEffect","useCallback","formatDistanceToNow","vi","extractImageUrl","CORS_PROXY","useRssFeed","type","_s","rssItems","setRssItems","loading","setLoading","error","setError","fetchDataFromRssFeed","response","fetch","ok","Error","text","parser","DOMParser","xml","parseFromString","items","Array","from","querySelectorAll","parsedItems","map","item","_item$getElementsByTa","_item$querySelector","_item$getElementsByTa2","_item$getElementsByTa3","_item$getElementsByTa4","titleCData","getElementsByTagName","textContent","descriptionCData","querySelector","timeSincePost","Date","addSuffix","locale","url","cdataTitle","replace","cdataContent","atomNamespace","atomLink","getElementsByTagNameNS","atomLinkHref","getAttribute","title","link","description","pubDate","mediaContent","category"],"sources":["D:/Downloads/my-app/my-app/my-app/src/helper/rssFetcher.jsx"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\nimport { vi } from \"date-fns/locale\";\r\nimport { extractImageUrl } from \"./RSSImage\";\r\n\r\nconst CORS_PROXY = \"https://thingproxy.freeboard.io/fetch/\";\r\n\r\nexport const useRssFeed = (type) => {\r\n  const [rssItems, setRssItems] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchDataFromRssFeed = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(`${CORS_PROXY}https://bongda24h.vn/RSS/${type}.rss`);\r\n      if (!response.ok) {\r\n        throw new Error(\"Network response was not ok\");\r\n      }\r\n      const text = await response.text();\r\n      const parser = new DOMParser();\r\n      const xml = parser.parseFromString(text, \"text/xml\");\r\n      const items = Array.from(xml.querySelectorAll(\"item\"));\r\n      const parsedItems = items.map((item) => {\r\n        const titleCData = item.getElementsByTagName(\"title\")[0]?.textContent;\r\n        const descriptionCData = item.querySelector(\"description\")?.textContent;\r\n        const timeSincePost = formatDistanceToNow(\r\n          new Date(item.getElementsByTagName(\"pubDate\")[0]?.textContent),\r\n          { addSuffix: true, locale: vi }\r\n        );\r\n        const url = extractImageUrl(descriptionCData);\r\n\r\n        // Lấy nội dung từ CDATA\r\n        const cdataTitle = titleCData.replace(/&quot;/g, '\"');\r\n        const cdataContent = descriptionCData.replace(/<[^>]+>/g, \"\");\r\n\r\n        const atomNamespace = \"http://www.w3.org/2005/Atom\";\r\n\r\n        // Trong hàm map items của bạn\r\n        const atomLink = item.getElementsByTagNameNS(atomNamespace, \"link\")[0];\r\n        const atomLinkHref = atomLink ? atomLink.getAttribute('href') : null;\r\n\r\n        return {\r\n          title: cdataTitle,\r\n          link: item.getElementsByTagName(\"link\")[0]?.textContent,\r\n          description: cdataContent,\r\n          pubDate: timeSincePost,\r\n          mediaContent: url,\r\n          category: item.getElementsByTagName(\"category\")[0]?.textContent,\r\n          atomLink: atomLinkHref \r\n        };\r\n      });\r\n      setRssItems(parsedItems);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(error);\r\n      setLoading(false);\r\n    }\r\n  }, [type]);\r\n\r\n  useEffect(() => {\r\n    fetchDataFromRssFeed();\r\n  }, [fetchDataFromRssFeed]);\r\n\r\n  return { rssItems, loading, error };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,SAASC,mBAAmB,QAAQ,UAAU;AAC9C,SAASC,EAAE,QAAQ,iBAAiB;AACpC,SAASC,eAAe,QAAQ,YAAY;AAE5C,MAAMC,UAAU,GAAG,wCAAwC;AAE3D,OAAO,MAAMC,UAAU,GAAIC,IAAI,IAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMgB,oBAAoB,GAAGd,WAAW,CAAC,YAAY;IACnD,IAAI;MACF,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,UAAW,4BAA2BE,IAAK,MAAK,CAAC;MACjF,IAAI,CAACS,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClC,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;MAC9B,MAAMC,GAAG,GAAGF,MAAM,CAACG,eAAe,CAACJ,IAAI,EAAE,UAAU,CAAC;MACpD,MAAMK,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACJ,GAAG,CAACK,gBAAgB,CAAC,MAAM,CAAC,CAAC;MACtD,MAAMC,WAAW,GAAGJ,KAAK,CAACK,GAAG,CAAEC,IAAI,IAAK;QAAA,IAAAC,qBAAA,EAAAC,mBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;QACtC,MAAMC,UAAU,IAAAL,qBAAA,GAAGD,IAAI,CAACO,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,cAAAN,qBAAA,uBAArCA,qBAAA,CAAuCO,WAAW;QACrE,MAAMC,gBAAgB,IAAAP,mBAAA,GAAGF,IAAI,CAACU,aAAa,CAAC,aAAa,CAAC,cAAAR,mBAAA,uBAAjCA,mBAAA,CAAmCM,WAAW;QACvE,MAAMG,aAAa,GAAGxC,mBAAmB,CACvC,IAAIyC,IAAI,EAAAT,sBAAA,GAACH,IAAI,CAACO,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,cAAAJ,sBAAA,uBAAvCA,sBAAA,CAAyCK,WAAW,CAAC,EAC9D;UAAEK,SAAS,EAAE,IAAI;UAAEC,MAAM,EAAE1C;QAAG,CAChC,CAAC;QACD,MAAM2C,GAAG,GAAG1C,eAAe,CAACoC,gBAAgB,CAAC;;QAE7C;QACA,MAAMO,UAAU,GAAGV,UAAU,CAACW,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC;QACrD,MAAMC,YAAY,GAAGT,gBAAgB,CAACQ,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;QAE7D,MAAME,aAAa,GAAG,6BAA6B;;QAEnD;QACA,MAAMC,QAAQ,GAAGpB,IAAI,CAACqB,sBAAsB,CAACF,aAAa,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;QACtE,MAAMG,YAAY,GAAGF,QAAQ,GAAGA,QAAQ,CAACG,YAAY,CAAC,MAAM,CAAC,GAAG,IAAI;QAEpE,OAAO;UACLC,KAAK,EAAER,UAAU;UACjBS,IAAI,GAAArB,sBAAA,GAAEJ,IAAI,CAACO,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,cAAAH,sBAAA,uBAApCA,sBAAA,CAAsCI,WAAW;UACvDkB,WAAW,EAAER,YAAY;UACzBS,OAAO,EAAEhB,aAAa;UACtBiB,YAAY,EAAEb,GAAG;UACjBc,QAAQ,GAAAxB,sBAAA,GAAEL,IAAI,CAACO,oBAAoB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,cAAAF,sBAAA,uBAAxCA,sBAAA,CAA0CG,WAAW;UAC/DY,QAAQ,EAAEE;QACZ,CAAC;MACH,CAAC,CAAC;MACF3C,WAAW,CAACmB,WAAW,CAAC;MACxBjB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAAC;MACfD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;EAEVP,SAAS,CAAC,MAAM;IACde,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,CAACA,oBAAoB,CAAC,CAAC;EAE1B,OAAO;IAAEN,QAAQ;IAAEE,OAAO;IAAEE;EAAM,CAAC;AACrC,CAAC;AAACL,EAAA,CAzDWF,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}